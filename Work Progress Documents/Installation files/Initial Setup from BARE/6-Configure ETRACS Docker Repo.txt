==============================
Configure ETRACS Docker Repo
==============================

01. Login to the server via Git Bash

02. Download and update the docker images

	$ cd ~/docker/bin
	$ sh update-docker-images.sh

	If successful proceed to Step-03
	otherwise resolve the problem of Step-02

03. Unpack the custom template

	$ cd ~/docker
	$ tar -xvf custom-template.tar.gz

04. Open the file "env.conf" using the "nano" editor

	$ nano ~/docker/_custom/env.conf

05. Change the value of the following settings:


	lgu_name=MUNICIPALITY OF TESTER {LGU_NAME}
	app_server_ip=192.168.0.26 {SERVER IP}
	server_ip=192.168.0.26 {SERVER IP}

	dbserver_host=192.168.0.1 {DATABASE IP}
	dbserver_user=root
	dbserver_pass=P@ssw0rd#
	
	db_etracs=etracs255_tester {LGU_NAME}


NOTE: To save, press CTRL + X, then press Y, then press ENTER
To cancel, press CTRL + X, then press N

06. Create the etracs main database

	$ mysql -u root -p -e 'CREATE DATABASE etracs255_tester CHARACTER SET utf8'

07. Restore the initial databases

	$ cd ~/docker/_res/_initial
	$ mysql -u root -p -f < 00-eor.sql
	$ mysql -u root -p -f -D etracs255_tester < 01-etracs255-schema.sql
	$ mysql -u root -p -f -D etracs255_tester < 02-etracs255-data.sql
	$ mysql -u root -p -f < 03-etracs_notification.sql
	$ mysql -u root -p -f < 04-etracs_image.sql
	$ mysql -u root -p -f < 05-queue.sql

08. Open the file "ext/set-{LGU-Type}-data.sql"

09. Modify the data parameters and save the changes.
Close the text editor to proceed to the next step.

10. Patch the extended script to the etracs main database.

	mysql -u root -p -f -D etracs255_{LGU_NAME} < 06-set-lgu-data.sql

11. Run the default containers

	$ cd ~/docker/bin
	$ sh start.sh

12. Monitor the health status and logs of your containers using the Portainer web app

	http://SERVER-IP:9000

13. ETRACS Docker Repo is now full configured.
You may now proceed to the Client installation.